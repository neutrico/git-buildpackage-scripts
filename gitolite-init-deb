#!/bin/sh

set -ex

[ -r ../deb-$1.properties ] && . ../deb-$1.properties

# initial properties
repo=$(echo $source | sed -e 's#/#\\\/#g')
homepage=$(echo $url | sed -e 's#/#\\\/#g')

tar -czvf $1_0.orig.tar.gz --files-from /dev/null

git clone git@localhost:deb-$1.git

mv deb-$1 $1-0
cd $1-0

git-import-orig -u0 ../$1\_0.orig.tar.gz

dh_make -d -t /usr/share/debhelper/dh_make/neutrico-$license -e $(git config --get user.email) -p $1

sed -i "s/#SOURCE#/$repo/g" debian/copyright
sed -i 's/#SECTION#/'$section'/g' debian/control
sed -i 's/#HOMEPAGE#/'$homepage'/g' debian/control
sed -i "/^Build-Depends/s/$/\, $(echo $build_dependencies | sed -e 's/\\/\\\\/g' -e 's/\//\\\//g' -e 's/&/\\\&/g')/" debian/control
sed -i "s/#SHORT_DESCRIPTION#/$(echo $short_description | sed -e 's/\\/\\\\/g' -e 's/\//\\\//g' -e 's/&/\\\&/g')/" debian/control
sed -i "s/#LONG_DESCRIPTION#/$long_description/" debian/control

echo "changelog merge=keepmine" > debian/.gitattributes
echo "compat    merge=keepmine" >> debian/.gitattributes
echo "control   merge=keepmine" >> debian/.gitattributes
echo "gbp.conf  merge=keepmine" >> debian/.gitattributes

git add .
git commit -m "Initial commit"

for x in $dists
do
    echo "initializing for $x"
    if [ ! -f .git/refs/heads/$x ]; then
	git checkout -b $x
	echo "[DEFAULT]" > debian/gbp.conf
	echo "debian-branch = $x" >> debian/gbp.conf
	echo "changelog merge=keepmine" > debian/.gitattributes
	echo "compat    merge=keepmine" >> debian/.gitattributes
	echo "control   merge=keepmine" >> debian/.gitattributes
	echo "gbp.conf  merge=keepmine" >> debian/.gitattributes
	rm -rf debian/changelog
	bld=1
	dch -p -D $x -v 0-0~$x$bld -M --package $1 --create --force-distribution "Initial release"
	git add .
	git commit -m "Intial $x commit"
	git checkout master
    fi
done

mv -f ../$1-0 ../deb-$1

git push --all
git push --tags
